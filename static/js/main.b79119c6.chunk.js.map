{"version":3,"sources":["App.tsx","index.tsx"],"names":["result","UAParser","getResult","browserbench","window","App","state","output","getBenchmarkText","componentDidMount","stats","Stats","showPanel","document","body","appendChild","dom","requestAnimationFrame","animate","begin","end","setInterval","setState","benchmarking","isBenchmarking","gl","getWebGLContext","debugInfo","getExtension","getParameter","UNMASKED_RENDERER_WEBGL","style","textAlign","backgroundColor","minHeight","color","display","flexDirection","alignItems","fontSize","type","height","width","margin","paddingTop","paddingBottom","paddingLeft","paddingRight","onClick","startBenchmarking","fontFamily","maxWidth","background","borderRadius","padding","browser","name","major","os","version","this","getWebGLRenderer","marginTop","overflow","whiteSpace","React","Component","ReactDOM","render","getElementById"],"mappings":"wUAOIA,GADW,IAAIC,YACCC,YAEdC,EAAgBC,OAAeD,aAWhBE,E,2MACnBC,MAAQ,CAAEC,OAAQJ,EAAaK,oB,EAE/BC,kBAAoB,WAClB,IAAMC,EAAQ,IAAIC,IAClBD,EAAME,UAAU,GAChBC,SAASC,KAAKC,YAAYL,EAAMM,KAMhCC,uBALgB,SAAVC,IACJR,EAAMS,QACNT,EAAMU,MACNH,sBAAsBC,MAGxBG,aACE,kBAAM,EAAKC,SAAS,CAAEf,OAAQJ,EAAaK,mBAAoBe,aAAcpB,EAAaqB,qBAC1F,M,kFAKF,IAAMC,EAAKC,4BACLC,EAAYF,EAAGG,aAAa,6BAClC,MACM,GAAN,OADKD,EACKF,EAAGI,aAAaF,EAAUG,yBADVH,K,+BAIlB,IAAD,OACP,OACE,yBAAKI,MAAO,CAAEC,UAAW,WACvB,yBACED,MAAO,CACLE,gBAAiB,UACjBC,UAAW,QACXC,MAAO,QACPC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,SAAU,SAIL,EAAKjC,MAAMiB,aAmBP,kBAAC,IAAD,CAAciB,KAAM,QAASL,MAAO,QAASM,OAAQ,GAAIC,MAAO,KAjBrE,4BACEX,MAAO,CACLY,OAAQ,OACRC,WAAY,MACZC,cAAe,MACfC,YAAa,OACbC,aAAc,OACdN,OAAQ,QAEVO,QAAS,WACP7C,EAAa8C,sBAVjB,mBAoBN,yBACElB,MAAO,CACLmB,WAAY,YACZC,SAAU,OACVC,WAAY,oBACZC,aAAc,OACdC,QAAS,SAGX,6BACG,UAAGtD,EAAOuD,QAAQC,KAAlB,YAA0BxD,EAAOuD,QAAQE,MAAzC,gBACIzD,EAAO0D,GAAGF,KADd,YACsBxD,EAAO0D,GAAGC,QADhC,gBAEIC,KAAKC,qBAEZ,yBACE9B,MAAO,CACL+B,UAAW,OACXC,SAAU,OACV/B,UAAW,OACXgC,WAAY,WACZd,WAAY,cAGbU,KAAKtD,MAAMC,e,GAtFO0D,IAAMC,WCfvCC,IAASC,OAAO,kBAAC,EAAD,MAASvD,SAASwD,eAAe,W","file":"static/js/main.b79119c6.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactLoading from \"react-loading\";\nimport { default as Stats } from \"stats.js\";\nimport { UAParser } from \"ua-parser-js\";\nimport { getWebGLContext } from \"gpu-compute\";\n\nconst parser = new UAParser();\nvar result = parser.getResult();\n\nconst browserbench = (window as any).browserbench as {\n  startBenchmarking: () => Promise<void>;\n  getBenchmarkText: () => string;\n  isBenchmarking: () => boolean;\n};\n\ninterface AppState {\n  output: string;\n  benchmarking: boolean;\n}\n\nexport default class App extends React.Component<{}, AppState> {\n  state = { output: browserbench.getBenchmarkText() } as AppState;\n\n  componentDidMount = () => {\n    const stats = new Stats();\n    stats.showPanel(0);\n    document.body.appendChild(stats.dom);\n    const animate = () => {\n      stats.begin();\n      stats.end();\n      requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n    setInterval(\n      () => this.setState({ output: browserbench.getBenchmarkText(), benchmarking: browserbench.isBenchmarking() }),\n      100\n    );\n  };\n\n  getWebGLRenderer() {\n    const gl = getWebGLContext();\n    const debugInfo = gl.getExtension(\"WEBGL_debug_renderer_info\");\n    if (!debugInfo) return `${debugInfo}`;\n    return `${gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL)}`;\n  }\n\n  render() {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <div\n          style={{\n            backgroundColor: \"#282c34\",\n            minHeight: \"100vh\",\n            color: \"white\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: \"16px\"\n          }}\n        >\n          {(() => {\n            if (!this.state.benchmarking) {\n              return (\n                <button\n                  style={{\n                    margin: \"20px\",\n                    paddingTop: \"5px\",\n                    paddingBottom: \"5px\",\n                    paddingLeft: \"15px\",\n                    paddingRight: \"15px\",\n                    height: \"30px\"\n                  }}\n                  onClick={() => {\n                    browserbench.startBenchmarking();\n                  }}\n                >\n                  Start Benchmark\n                </button>\n              );\n            } else {\n              return <ReactLoading type={\"cylon\"} color={\"white\"} height={70} width={70} />;\n            }\n          })()}\n          <div\n            style={{\n              fontFamily: \"monospace\",\n              maxWidth: \"80vw\",\n              background: \"hsl(224, 8%, 22%)\",\n              borderRadius: \"15px\",\n              padding: \"15px\"\n            }}\n          >\n            <div>\n              {`${result.browser.name} ${result.browser.major}, ` +\n                `${result.os.name} ${result.os.version}, ` +\n                `${this.getWebGLRenderer()}`}\n            </div>\n            <div\n              style={{\n                marginTop: \"15px\",\n                overflow: \"auto\",\n                textAlign: \"left\",\n                whiteSpace: \"pre-wrap\",\n                fontFamily: \"monospace\"\n              }}\n            >\n              {this.state.output}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}